/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import util.DBConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.AdminUser;
import model.User;

/**
 *
 * @author muratsanli
 */
public class TransactionFormFrame extends javax.swing.JFrame {

    private User currentUser;

    public TransactionFormFrame() {
        initComponents();
    }

    public TransactionFormFrame(User user) {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.currentUser = user;
        setupUserDropdown();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCurr = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTransactions = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        lblType1 = new javax.swing.JLabel();
        lblAmt1 = new javax.swing.JLabel();
        lblCurr1 = new javax.swing.JLabel();
        lblUser1 = new javax.swing.JLabel();
        lblDesc1 = new javax.swing.JLabel();
        comboType1 = new javax.swing.JComboBox<>();
        txtCategory1 = new javax.swing.JTextField();
        txtAmount1 = new javax.swing.JTextField();
        radioTL1 = new javax.swing.JRadioButton();
        radioUSD1 = new javax.swing.JRadioButton();
        radioEUR1 = new javax.swing.JRadioButton();
        comboUsername1 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescription1 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        listCategories1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblType = new javax.swing.JLabel();
        lblAmt = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        lblCurr = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        comboType = new javax.swing.JComboBox<>();
        txtCategory = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        radioTL = new javax.swing.JRadioButton();
        radioUSD = new javax.swing.JRadioButton();
        radioEUR = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        comboUsername = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listCategories = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableTransactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Type", "Category", "Amount", "Currency", "Description", "Username", "Created At"
            }
        ));
        tableTransactions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTransactionsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableTransactions);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblType1.setText("Type");

        lblAmt1.setText("Amount");

        lblCurr1.setText("Currency");

        lblUser1.setText("User");

        lblDesc1.setText("Description");

        comboType1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Income", "Expense", " " }));

        buttonGroup1.add(radioTL1);
        radioTL1.setText("TL");

        buttonGroup1.add(radioUSD1);
        radioUSD1.setText("USD");

        buttonGroup1.add(radioEUR1);
        radioEUR1.setText("EUR");

        txtDescription1.setColumns(20);
        txtDescription1.setRows(5);
        jScrollPane3.setViewportView(txtDescription1);

        listCategories1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Salary ", "Groceries", "Rent", "Transportation", "Utilities", "Food" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listCategories1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listCategories1ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(listCategories1);

        jLabel3.setText("or Write");

        jLabel4.setText("Select Category");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblType1)
                            .addComponent(lblAmt1)
                            .addComponent(lblCurr1)
                            .addComponent(lblUser1))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(radioTL1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioUSD1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioEUR1))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(comboType1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAmount1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(comboUsername1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCategory1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(10, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblDesc1)
                                .addGap(76, 76, 76))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblType1))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAmt1)
                    .addComponent(txtAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCurr1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radioTL1)
                        .addComponent(radioUSD1)
                        .addComponent(radioEUR1)))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUser1)
                    .addComponent(comboUsername1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblDesc1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCategory1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnAdd))
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Add-Delete", jPanel2);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        lblType.setText("Type");

        lblAmt.setText("Amount");

        lblDesc.setText("Description");

        lblCurr.setText("Currency");

        lblUser.setText("User");

        comboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Income", "Expense", " " }));

        buttonGroupCurr.add(radioTL);
        radioTL.setText("TL");

        buttonGroupCurr.add(radioUSD);
        radioUSD.setText("USD");

        buttonGroupCurr.add(radioEUR);
        radioEUR.setText("EUR");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        listCategories.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Salary ", "Groceries", "Rent", "Transportation", "Utilities", "Food" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listCategories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listCategoriesValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(listCategories);

        jLabel1.setText("or Write");

        jLabel2.setText("Select Category");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblType)
                            .addComponent(lblAmt)
                            .addComponent(lblCurr)
                            .addComponent(lblUser))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radioTL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioUSD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioEUR))
                            .addComponent(comboUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDesc)
                        .addGap(64, 64, 64))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnUpdate)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioTL)
                            .addComponent(radioUSD)
                            .addComponent(radioEUR)
                            .addComponent(lblCurr))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUser)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblType)
                            .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAmt)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(lblDesc)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addGap(41, 41, 41))
        );

        jTabbedPane1.addTab("Update", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableTransactionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTransactionsMouseClicked
        int row = tableTransactions.getSelectedRow();
        if (row != -1) {
            String type = tableTransactions.getValueAt(row, 1).toString();
            comboType.setSelectedItem(type);
            txtCategory.setText(tableTransactions.getValueAt(row, 2).toString());
            txtAmount.setText(tableTransactions.getValueAt(row, 3).toString());
            txtDescription.setText(tableTransactions.getValueAt(row, 5).toString());
            comboUsername.setSelectedItem(tableTransactions.getValueAt(row, 6).toString());

            String currency = tableTransactions.getValueAt(row, 4).toString();
            switch (currency) {
                case "USD":
                    radioUSD.setSelected(true);
                    break;
                case "EUR":
                    radioEUR.setSelected(true);
                    break;
                case "TL":
                    radioTL.setSelected(true);
                    break;
            }

        }


    }//GEN-LAST:event_tableTransactionsMouseClicked

    private void listCategoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listCategoriesValueChanged
        txtCategory.setText(listCategories.getSelectedValue());
    }//GEN-LAST:event_listCategoriesValueChanged

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int row = tableTransactions.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select a row first");
            return;
        }

        int id = (int) tableTransactions.getValueAt(row, 0);
        String type = comboType.getSelectedItem().toString();
        String category = txtCategory.getText();
        double amount = Double.parseDouble(txtAmount.getText());
        String amountStr = txtAmount.getText();
        String desc = txtDescription.getText();
        String user = comboUsername.getSelectedItem().toString();

        if (!category.matches("^[A-Za-z ]+$")) {
            JOptionPane.showMessageDialog(this, "Category must contain only letters.");
            return;
        }

        if (!amountStr.matches("^\\d+(\\.\\d{1,2})?$")) {
            JOptionPane.showMessageDialog(this, "Amount must be a number, up to 2 decimal places.");
            return;
        }

        String currency = "";
        if (radioUSD.isSelected()) {
            currency = "USD";
        } else if (radioEUR.isSelected()) {
            currency = "EUR";
        } else if (radioTL.isSelected()) {
            currency = "TL";
        } else {
            JOptionPane.showMessageDialog(this, "Please select a currency");
            return;
        }

        try (Connection conn = DBConnection.getConnection(); PreparedStatement ps = conn.prepareStatement(
                "UPDATE transactions SET type=?, category=?, amount=?, currency=?, description=?, username=? WHERE id=?")) {

            ps.setString(1, type);
            ps.setString(2, category);
            ps.setDouble(3, amount);
            ps.setString(4, currency);
            ps.setString(5, desc);
            ps.setString(6, user);
            ps.setInt(7, id);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Transaction updated");
            loadTransactionsToTable();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void listCategories1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listCategories1ValueChanged
        txtCategory1.setText(listCategories1.getSelectedValue());
    }//GEN-LAST:event_listCategories1ValueChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String user = comboUsername1.getSelectedItem().toString();

        if (currentUser.getRole().equals("Admin")) {
            addTransaction(user);
        } else {
            addTransaction();
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tableTransactions.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select a row first");
            return;
        }

        int id = (int) tableTransactions.getValueAt(row, 0);

        try (Connection conn = DBConnection.getConnection(); PreparedStatement ps = conn.prepareStatement("DELETE FROM transactions WHERE id=?")) {

            ps.setInt(1, id);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Transaction deleted");
            loadTransactionsToTable();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void loadTransactionsToTable() {
        String sql;
        PreparedStatement ps;

        try (Connection conn = DBConnection.getConnection()) {

            if ("Admin".equalsIgnoreCase(currentUser.getRole())) {
                // Admin tüm kayıtları görebilir
                sql = "SELECT * FROM transactions";
                ps = conn.prepareStatement(sql);
            } else {
                // Normal kullanıcı sadece kendi kayıtlarını görebilir
                sql = "SELECT * FROM transactions WHERE username = ?";
                ps = conn.prepareStatement(sql);
                ps.setString(1, currentUser.getUsername());
            }

            try (ResultSet rs = ps.executeQuery()) {

                String[] colNames = {"ID", "Type", "Category", "Amount", "Currency", "Description", "Username", "Created_at"};
                DefaultTableModel model = new DefaultTableModel(null, colNames);

                while (rs.next()) {
                    model.addRow(new Object[]{
                        rs.getInt("id"),
                        rs.getString("type"),
                        rs.getString("category"),
                        rs.getDouble("amount"),
                        rs.getString("currency"),
                        rs.getString("description"),
                        rs.getString("username"),
                        rs.getTimestamp("created_at")
                    });
                }
                tableTransactions.setModel(model);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading transactions");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionFormFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionFormFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionFormFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionFormFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransactionFormFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroupCurr;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JComboBox<String> comboType1;
    private javax.swing.JComboBox<String> comboUsername;
    private javax.swing.JComboBox<String> comboUsername1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAmt;
    private javax.swing.JLabel lblAmt1;
    private javax.swing.JLabel lblCurr;
    private javax.swing.JLabel lblCurr1;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblDesc1;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblType1;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel lblUser1;
    private javax.swing.JList<String> listCategories;
    private javax.swing.JList<String> listCategories1;
    private javax.swing.JRadioButton radioEUR;
    private javax.swing.JRadioButton radioEUR1;
    private javax.swing.JRadioButton radioTL;
    private javax.swing.JRadioButton radioTL1;
    private javax.swing.JRadioButton radioUSD;
    private javax.swing.JRadioButton radioUSD1;
    private javax.swing.JTable tableTransactions;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtAmount1;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtCategory1;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextArea txtDescription1;
    // End of variables declaration//GEN-END:variables

    private void setupUserDropdown() {
        comboUsername.removeAllItems();
        comboType.removeAllItems();
        comboType.addItem("Income");
        comboType.addItem("Expense");

        if (currentUser instanceof AdminUser) {

            try (Connection conn = DBConnection.getConnection(); PreparedStatement st = conn.prepareStatement("SELECT username FROM users WHERE role = 'Accountant'"); ResultSet rs = st.executeQuery()) {

                while (rs.next()) {
                    comboUsername.addItem(rs.getString("username"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            comboUsername.addItem(currentUser.getUsername());
            comboUsername.setEnabled(false); // sadece kendi adını görür

        }

        comboUsername1.removeAllItems();
        comboType1.removeAllItems();
        comboType1.addItem("Income");
        comboType1.addItem("Expense");
        if (currentUser instanceof AdminUser) {

            try (Connection conn = DBConnection.getConnection(); PreparedStatement st = conn.prepareStatement("SELECT username FROM users WHERE role = 'Accountant'"); ResultSet rs = st.executeQuery()) {
                while (rs.next()) {
                    comboUsername1.addItem(rs.getString("username"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            comboUsername1.addItem(currentUser.getUsername());
            comboUsername1.setEnabled(false); // sadece kendi adını görür

        }

        loadTransactionsToTable();
    }

    public void addTransaction() { // Accountant kendi işlemini eklerken

        saveTransaction(currentUser.getUsername());
    }

    public void addTransaction(String username) { // Admin başka kullanıcıya işlem eklerken

        saveTransaction(username);
    }

    public void saveTransaction(String username) {

        String amountStr = txtAmount1.getText();
        if (!amountStr.matches("\\d+(\\.\\d{1})?")) {
            JOptionPane.showMessageDialog(this, "Amount must be a number, up to 1 decimal places.");
            return;
        }
        double amount = Double.parseDouble(txtAmount1.getText());

        try (Connection conn = DBConnection.getConnection(); PreparedStatement ps = conn.prepareStatement(
                "INSERT INTO transactions (type, category, amount, currency, description, username) VALUES (?, ?, ?, ?, ?, ?)")) {
            String type = comboType1.getSelectedItem().toString();
            String category = txtCategory1.getText();

            if (!category.matches("^[A-Za-z ]+$")) {
                JOptionPane.showMessageDialog(this, "Category must contain only letters.");
                return;
            }

            String desc = txtDescription1.getText();
            String user = comboUsername1.getSelectedItem().toString();

            String currency = "";
            if (radioUSD1.isSelected()) {
                currency = "USD";
            } else if (radioEUR1.isSelected()) {
                currency = "EUR";
            } else if (radioTL1.isSelected()) {
                currency = "TL";
            } else {
                JOptionPane.showMessageDialog(this, "Please select a currency");
                return;
            }

            ps.setString(1, type);
            ps.setString(2, category);
            ps.setDouble(3, amount);
            ps.setString(4, currency);
            ps.setString(5, desc);
            ps.setString(6, user);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Transaction added");
            loadTransactionsToTable();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

}
